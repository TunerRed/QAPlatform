<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qasite.dao.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.qasite.bean.Resource">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="format" jdbcType="VARCHAR" property="format" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="provider_id" jdbcType="INTEGER" property="providerId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="point" jdbcType="INTEGER" property="point" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="download_times" jdbcType="INTEGER" property="downloadTimes" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, title, description, format, address, provider_id, type, point, date, download_times
  </sql>
  <select id="selectByExample" parameterType="com.qasite.bean.ResourceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resource
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resource
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qasite.bean.ResourceExample">
    delete from resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qasite.bean.Resource">
    insert into resource (Id, title, description, 
      format, address, provider_id, 
      type, point, date, 
      download_times)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{format,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{providerId,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{point,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, 
      #{downloadTimes,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qasite.bean.Resource">
    insert into resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="format != null">
        format,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="providerId != null">
        provider_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="point != null">
        point,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="downloadTimes != null">
        download_times,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="format != null">
        #{format,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null">
        #{providerId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="point != null">
        #{point,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="downloadTimes != null">
        #{downloadTimes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qasite.bean.ResourceExample" resultType="java.lang.Long">
    select count(*) from resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resource
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.format != null">
        format = #{record.format,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.providerId != null">
        provider_id = #{record.providerId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.point != null">
        point = #{record.point,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.downloadTimes != null">
        download_times = #{record.downloadTimes,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resource
    set Id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      format = #{record.format,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      provider_id = #{record.providerId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      point = #{record.point,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      download_times = #{record.downloadTimes,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qasite.bean.Resource">
    update resource
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="format != null">
        format = #{format,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null">
        provider_id = #{providerId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="downloadTimes != null">
        download_times = #{downloadTimes,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qasite.bean.Resource">
    update resource
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      format = #{format,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      provider_id = #{providerId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      point = #{point,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      download_times = #{downloadTimes,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 在数据库中使用一套关键词列表查询相关问题，返回一个问题的ArrayList -->
  <select id="selectByKeywords" parameterType="java.util.LinkedList" resultMap="BaseResultMap">
    select * from resource
    <if test="list != null">
      <where>
        1
        <foreach collection="list" index="index" item="key" open="" separator=" " close="">
          <if test="key != null and key != ''">
            AND description LIKE '%${key}%'
          </if>
        </foreach>
      </where>
    </if>
  </select>
  <!-- 使用关键词列表查询，并借助上次的查询结果排除已经得到的问题，返回一个问题的ArrayList -->
  <select id="selectByKeywordsAndOlds" resultMap="BaseResultMap">
    select * from resource
    <if test="keys != null">
      <where>
        1
        <if test="oldResult != null and oldResult.size > 0">
          AND
          Id not in
          <foreach item="item" index="index" collection="oldResult" open="(" separator="," close=")">
            '${item.id}'
          </foreach>
        </if >
        <foreach item="key" index="index" collection="keys" open="" separator=" " close="">
          <if test="key != null and key != ''">
            AND description LIKE '%${key}%'
          </if>
        </foreach>
      </where>
    </if>
  </select>

</mapper>